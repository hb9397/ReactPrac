REACT
1. react
    => UI를 만드는데 사용할 수 있는 JS 라이브러리
    => SPA(Single Page Application) 구현을 위해서 사용하는 경우가 대부분이다.
        -> 같은 목적으로 만들어진 라이브러리로는 angular.js나 vue.js 등이 있다.

    => component 프로그래밍 을 지향
        -> 특정 부분의 모양을 결정하는 선언체
        -> 템플릿 엔진은 데이터 셋과 HTML을 가지고 HTML을 재생성해서 보여주는 용도로만 사용하지만 컴포넌트는 많은 기능을 내장한 재사용 가능한 개체
    
    => 출력시 Virtual DOM을 이용하기 때문에 출력속도가 빠르다
        -> DOM(Document Object Model)은 JS Built-In Object(내장객체)보다 처리속도가 느리다.
        -> react 에서는 Virtual DOM을 이용해서 출력할 내용을 메모리에 만든후 데이터가 변경되면 Virtual DOM에 적용을 하고 실제 DOM과 비교한 뒤 변경되는 부분만 수정해서 출력하는 형태로 동작한다.
        -> 반면 Templet 엔진은 데이터가 변경이 되면 변경된 데이터와 HTML을 가지고 다시 화면을 만들어서 출력한다.
        -> Virtual DOM의 방식은 게임엔진이 화면 출력을 만드는 방식과 비슷하다.

    => MVC(Model-View-Controller), MVVM(Model-View-ViewModel), MVW(Model-View-Whatever), MVP(Model-View-Presentation) 등의 구조를 위한 프레임워크와 다른 오로지 View만을 위한 라이브러리.
    => 일반적으로 프레임워크는 애플리케이션을 만들 수 있지만, 라이브러리만으로 애플리케이션을 만들 수 는 없다는 것으로 구분, React는 프레임 워크가 아닌 라이브러리.

    => React 만으로는 필요한 기능을 가진 Application을 만들 수 없기 때문에 화면을 만드는 것을 제외한 기능은 직접 구현해야 한다는 단점이 있다.
    => ajax 처리를 위한 axios나 fetch api 와 같은 데이터를 가져오기 위한 라이브러리와 redux 와같은 라이브러리를 같이 학습하는 편이 좋다

2. 개발 환경 설정
    1) node 설치

    2) npm : node의 패키지 관리자로 node를 설치하면 자동으로 설치 된다.

    3) yarn
        => npm 을 개선한 패키지 관리자
        => npm 보다 속도가 빠르고 더 나은 캐싱 시스템을 사용
        => 설치
            -> npm install yarn 인데 yarn 명령을 모든 곳에서 사용할 수 있도록 하기 위해서 전역으로 설치한다.
            -> npm install -g yarn 혹은 npm install --location=global yarn
            -> yarn --version 으로 설치 및 버전 확인 가능

    4) webpack
        -> 프로젝트에 사용된 파일을 분석해서 웹 문서 파일로 변환해주는 도구
        -> 웹 브라우저는 js와 css그리고 httml을 해석할 수 있는데 프레임워크나 라이브러리를 사용하다보면 이러한 확장자 이외의 파일을 만들어서 사용하는 경우가 있다, 이 경우 webpack css나 html 로 변환해 준다.
        -> BUT React 프로젝트 작성 명령 수행시 직접 설치할 필요는 없다.


    5) Babel
        => 대다수의 브라우저들은 ES6(ECMA 2015) 버전의 JS 문법까지는 적용할 수 있는데 그 이상의 버전의 문법은 이해하지 못하는 경우가 있을 수 있어서 Babel이 이러한 코드들을 ES6 이하의 문법으로 변환해주는 Trans Compiler 다.

    6) IDE
        => Visual Studio Code 같은 IDE가 필요 하다.

    7) 형상 관리 도구
        => Git이 대표적인 형상관리 도구

    8) 편리한 디버깅을 위해서 [크롬 확장 프로그램]-[React Developer Tools]

    9) React 프로젝트를 만들기 위해서 필요한 애플리케이션 설치